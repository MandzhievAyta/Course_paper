A Framework for Detection and Measurement of Phishing Attacks  K.4 [Computers and Society]: Electronic Commerce; K.4.4 [Electronic Commerce]: [Security]  Phishing, a term coined in 1996, was originally used to describe theft of AOL passwords and corresponding accounts [3]. However, over the decade the deﬁnition of phishing has expanded. Attackers today use attack vectors such as email,  Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for proﬁt or commercial advantage and that copies bear this notice and the full citation on the ﬁrst page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission and/or a fee.
WORM’07, November 2, 2007, Alexandria, Virginia, USA.
Copyright 2007 ACM 978-1-59593-886-2/07/0011 ...$5.00.

trojan horse key loggers and man in the middle data proxies to trick the users. More often than not, the victim is a user of online banking sites or payment services such as PayPal, and online e-commerce sites.
Phishing attacks are growing rapidly by the day. The Anti Phishing Work Group detected a total of 27,221 unique phishing URLs in January 2007. Sophos, an anti-virus company, claims that freely downloadable do-it-yourself phishing kits exist [22]. Consequently anyone surﬁng the web can now get their hands on these kits and launch their own phishing attack. These kits are supposed to contain all the graphics, web code and text required to construct bogus web sites designed to have the same look-and-feel as legitimate online banking sites. They also include spamming software which enables potential fraudsters to send out hundreds of thousands of phishing emails as bait for potential victims.
These numbers and technology indicate the need for improved phishing detection and prevention and also a need for increased awareness amongst the target masses.
We ﬁnd that existing anti-phishing techniques, whether third party certiﬁcation based [12], password based [20] or URL based [16] are not robust enough for phishing detection.
In this paper we focus on improving URL based detection of phishing sites. While techniques that rely on retrieving content pointed to by a URL might have better detection rates, it is important to note that these techniques can result in undesired side eﬀects. For instance, fetching content could potentially trigger actions (such as signing up to a mailing list or even acknowledging receipt of a credit card) on behalf of the user. Such unwanted events can be avoided through relying on classiﬁcation schemes that are based only on examining the URL.
In this paper we identify several ﬁne-grained heuristics that can be used to distinguish between a phishing URL and a benign URL. These heuristics are used to model a logistic regression classiﬁer [9]. In addition to obfuscation style heuristics, which have been considered in previous work, our classiﬁer also incorporates several general heuristics based on Google’s Index Infrastructure. As a result, our classiﬁcation technique achieves an accuracy of 97.3%, thus demonstrating that URL analysis alone can achieve a high degree of accuracy in phishing detection.
In an eﬀort to better understand the prevalence of phishing on the Internet, we use our classiﬁer to perform detailed  measurements on 12 days of Google Toolbar URLs (from August 20th to August 31st 2006). Our data set comprises of several million URLs. We quantify the average number of phishing attacks and the number of potential phishing victims in a day. We ﬁnd that current literature in phishing lacks such a large scale and thorough measurement study.
Our ﬁndings conﬁrm the seriousness of the phishing threat today.

In a phishing attack, an adversary typically lures the victim into clicking a URL pointing to the phishing site. The adversary usually obfuscates this URL through varied methods. To determine the popular obfuscation techniques currently in use, we examined a black list of phishing URLs maintained by Google. This black list is used to provide phishing protection in Firefox [21]. The prominent obfuscation techniques are:  - Type I: Obfuscating the Host with an IP address.
In this form of attack the URL’s hostname is replaced with an IP address, and usually the organization being phished is placed in the path. Very often the IP address is also represented in hex or decimal rather than the dotted quad form.

- Type II: Obfuscating the Host with another Domain. In this form of attack the URL’s host contains a valid looking domain name, and the path contains the organization being phished. This form of attack usually tries to imitate URLs containing a redirect so as to make it appear valid.

- Type III: Obfuscating with large host names. This form of attack has the organization being phished in the host but appends a large string of words and domains after the host name.

- Type IV: Domain unknown or misspelled. Here there is no apparent relationship to the organization being phished or the domain name is misspelled.

Table 1 provides some illustrative examples for each of the aforementioned types. These obfuscation types are also used as features in our classiﬁer, described in Section 3.1.

Based on the categories of phishing URLs found in the previous section, we identify distinguishing features of phishing URLs and use the features to model a logistic regression  classiﬁer. We choose logistic regression because it is computationally eﬃcient to evaluate. For training the model we created a training black list and white list as follows: Training Black list: As indicated previously, Google maintains a black list of URLs for providing phishing protection to Firefox users [21]. This black list is continuously updated through commercial sources as well as internal Google sources. It is thoroughly examined by human experts to eliminate any noisy (non-phishing) URLs. We use 1245 URLs from this list as our training black list.
Training White list: We used a list of the top 1000 most popular URLs as the basis of our training white list set.
This list was collected through a variety of means, including manual selection as well as algorithmic techniques that collate signals to detect high quality URLs. We further added URLs which had lower popularity to the training set. These were mainly non-phishing URLs that contained redirects.
This brought our training white list to 1263 URLs.
Additionally, we take advantage of Google’s infrastructure to create two data structures: White Domain Table: This table maintains a white list of top level domains. We use this table to create the Target Organization List, a list of organizations which are known phishing targets. This includes various banks and also organizations like Ebay.
Crawl Database: We use Google’s index [1] infrastructure to obtain features of a page. These are precomputed during Google’s crawl phase and maintained internally by Google in the crawl database. This table is indexed by URL.

A phishing URL and the corresponding page have several features which can diﬀerentiate it from a benign URL. These include obfuscation style features which were described in Section 2. It is important to note that an adversary might be able to easily evade URL detection mechanisms that rely on only obfuscation based features. He would accomplish this by crafting the URL very carefully. Our classiﬁer, however also incorporates several generic features and hence is more robust against an adversary seeking to avoid detection.
We categorize our features into four groups: Page Based, Domain Based, Type Based and Word Based features.

Page Based. These include the Page Rank [17] of a web page, its presence in the index and its quality. We discuss each in turn below:  - Page Rank [17] is a numeric value on a scale of [0,1] that represents the relative importance of a page within a set of web pages. The higher the Page Rank, the more im portant the page. Phishing web pages are short lived and thus either have a very low Page Rank or their Page Rank does not exist in the Crawl Database. Three page rank features that provide discriminatory power are the Page Rank of URL, Page Rank of Host and whether the Page Rank is present in Crawl Database.

- Phishing web pages are usually accessible for only a short period of time; thus, many might not be found in the index. We use this property as a feature. Given a URL, we use the Crawl Database to test if the corresponding page is found in the index or not. We found that 39.5% of the white list URLs are present in the index. On the other hand, only 8.2% of the black list URLs are found in the index. These numbers conﬁrm our conjecture that phishing pages are short lived.

- Google recommends quality guidelines [11] that a site can use to avoid being removed entirely from the Google index.
The Crawl Database also maintains scores that quantify the quality of the page. These scores measure if the web masters comply with the guidelines in [11]. The higher the score the better the page quality. We found that phishing pages would either have a low quality score or have no scores at all.

Domain Based . This category contains only one feature: whether or not the URL’s domain name can be found in the White Domain Table. Phishing URL domains are usually either obfuscated (Type I, II and III) or unknown (Type IV). As suspected, a considerable percentage (51.2%) of the white list URLs were present in the table and only 0.2% of  1For those URLs where the page rank could not be determined, we assign them a page rank of 0.

the black list URLs were found in this table. The results are depicted in the histogram in Figure 2. These results indicate that presence in the White Domain Table, is a strong feature for identifying if a URL is not phishing.

Type Based. The obfuscation types identiﬁed in Section 2 can also be used as features:  - Type I URL. Figure 3 shows the histogram for host based obfuscation. Almost all non-phishing (white list) URLs in our training data do not contain host obfuscation and a signiﬁcant portion of the phishing URLs are host obfuscated with an IP address.

- Type II URL. We iterate through the Target Organization list to check if any of the organizations are found in the URL’s path but not in its host. The Target Organization List is sorted by length of the organization so as to perform a search for the longest organization ﬁrst. As depicted in Figure 3 considerable portion of the black list URLs are Type II URLs.

- Type III URL. To identify this category of URLs we determine the number of characters present after an organization in the hostname. We obtain the URL’s hostname and use the Target Organization List to check if an organization is found in the hostname. We then determine the number of characters from the end of the organization to the end of the hostname.

From our training data we found that a non-phishing URL usually has a path separator after the organization, e.g. http: //by124fd.bay124.hotmail.msn.com/cgi-bin/getmsg has 0 characters after msn.com and before the path separator.
Furthermore, the maximum number noticed in a white list URL are 14 characters and the average across all white list URLs is 0.21 characters.

On the other hand Type III phishing URLs in our training data have 7.34 characters (on average) after the target or ganization and before the path separator and a maximum of 63 characters.

Word Based Features. Phishing URLs are found to contain several suggestive word tokens. For example the words login and signin are very often found in a phishing URL.
In order to obtain all such tokens we used sub-string extraction algorithm by Provos et al. [18] over the URLs in our training black list. We obtained 150 tokens and their frequencies. We discarded all tokens with length < 5 since they contained several common URL parts such as http://, and www. We discarded organization name tokens like Ebay, since they were already covered by our Target Organization List.
We further removed query parameters such as &UsingSSl=, &errmsg=. From the remainder we chose the tokens webscr, secure, banking, ebayisapi, account, confirm, login and signin as features in our classiﬁer.

Our word based features are boolean, we test if the given word is present or absent in a URL. These features specially enhance the detection of Type IV phishing URLs which do not contain a target organization or the organization is mis spelled. Table 2 shows the distribution of these features in our training set.
We ﬁnd that the features login and signin are very prominent in our black list. The feature webscr is very prominent in Paypal URLs and ebayisapi is found in both phishing and non-phishing Ebay URLs.

We chose the logistic regression classiﬁcation technique.
Logistic regression is a method for determining whether a set of independent variables has a unique predictive relationship to a binary dependent variable. Speciﬁcally, logistic regression is instrumental in evaluating the probability of the dependant variable occurring. In our setting, the dependent variable is whether a URL is a phishing URL, and the independent variables are the features we identiﬁed previously. For a given URL, and the values for each feature with respect to that URL, our logistic regression classiﬁer estimates the probability of the URL being a phishing URL.
To train the logistic regression classiﬁer the identiﬁed features were computed on the training data. Our labeled data consisted of 2508 URLs of which 1245 were phishing URLs and 1263 were benign URLs, as described in Section 3. Phishing URLs were placed under the positive (true) class and non-phishing ones were under the negative (false) class.
We chose a random split of the labeled data — 66% of URLs were used for training and the remaining 34% were used as the test set. These sets were disjoint.
We chose the logistic regression learning algorithm by Hosmer et al. [9] and used the data mining library in [23] to obtain the coeﬃcients of our 18 features. To indicate the relative strength of each feature in identifying a Phishing URL we report the corresponding odds ratios, ecoefficient, in Table 3. Odds ratio is deﬁned as the ratio of the odds  of an event occurring in the positive class (phishing) to the odds of it occurring in the negative class (not phishing). An odds ratio of 1 indicates that a feature is equally useful in identiﬁcation of both classes. An odds ratio greater than 1 implies the corresponding feature is more useful in identifying the positive class.
Host obfuscation was found to be the most useful in detecting if a URL is phishing, as indicated by the very high odds ratio. Similarly presence in the White Domain Table is a strong indicator that a URL is not phishing. We point out that, even though these two features alone are strong discriminators, they are not suﬃcient in identifying all types of phishing URLs. Hence we also use the other features listed in our model.
We evaluated the trained model on the 34% test set split.
We performed our evaluation over multiple runs with randomized partioning. This evaluation gave us an average accuracy of 97.31% with a True Positive Rate of 95.8 % and False Positive Rate of 1.2%.
In order to obtain a better metric of accuracy we also examined the area under the Threshold Curve. This is popularly known as the ROC (Receiver Operating Characteristic) curve [19] and reports each type of error at diﬀerent probability thresholds. Note that the probability thresholds denote probability of a URL being phishing and for logistic regression they are computed using the equation  where score denotes the weighted score obtained from the feature values and the regression coeﬃcients.
We ﬁnd that the area under the ROC curve for the positive class is 0.9923, thus conﬁrming that our classiﬁer has a high accuracy of phishing URL detection. We used the ROC curve to deduce the probability threshold at which the false positives are very low. Speciﬁcally, we set the probability threshold to 0.985 at which the False Positive Rate is 0.7%, True Positive Rate is 88% and the accuracy is 93.4%.
The resulting ﬁlter was used to analyze URLs obtained from Google Safe Browsing toolbar. Since our probability threshold is high, we have very few false positives. We detail our measurements in the following section.

We use the model described in Section 3 to measure frequency, type and origin of phishing attacks based on data obtained from the Google Safe Browsing toolbar. We collected several million URLs from August 20th to August 31 2006. The data consisted of two main components, unique URLs which are visited each day, and consecutive lookup requests to these URLs.

Average Phishing URLs per day.
We used our classiﬁer, on this data set to determine the average number of phishing URLs which have been visited from Google’s toolbar in a day. Figure 4 shows the distribution of phishing attacks on each day of our study. From our analysis we ﬁnd that on average there are 777 URL phishing attacks in a day and an average of 5073 viewers to a phishing page. We observed that maximum phishing attacks occurred on Day 4 (August 23rd) and maximum number of viewers (hits) occurred on Day 3 (August 22nd). The graph  in Figure 4 also depicts the phishing victims which we will describe shortly.
We further analyzed the phishing URLs identiﬁed and categorize them based on the obfuscation category. Table 4 shows this distribution.

As indicated by the distribution, Type I and Type III are the popular obfuscation techniques used in phishing. The high percentage of host obfuscation attacks (Type I) is also consistent with our feature analysis, which gave the Host Obfuscation feature a high logistic coeﬃcient. The considerable percentage of Type II and Type III attacks also conﬁrms our previous argument that despite the high odds ratio, host obfuscation alone is not suﬃcient to identify phishing URLs.
Additionally, we examined the phishing URLs identiﬁed to determine the URLs which stay active across all the 12 days.
In other words, we determine those phishing URLs whose site has been accessed on each day during the observation period. The top 10 such URLs and their Obfuscation Types are depicted in Table 5. We ﬁnd that Type I and Type III obfuscation are prominent amongst the top 10 URLs.

Average Potential Phishing Victims per day.
We used the Logistic Regression Classiﬁer on the lookup requests to each toolbar URL to determine how many users interact with a phishing page. Each lookup request consisted of the URL the browser navigated to. To determine which events involved user interaction at a phishing page we examined all the requests where two consecutive URLs remained  URL 213.92.8.142/Redirect/cgi.ebay.it/ws/eBayISAPI.dll 211.100.16.141/shopping/PaypalReturn.aspx 203.143.16.149/icons/small/www.paypal.com/SecureInfo/paypal/index.php 210.83.203.118/https:/cgi3.ca.ebay.com/eBayISAPI.dllSignIn.php www.53.com.wps.portal.secure.pool34.st/context 210.77.218.175/rdcwwyh/www.paypal.com/update/cgi-bin/index.php 212.23.177.35:8080/paypal/ReponseDemandeAccordPaypal.do www.volksbank.de.vr-web.networld.onlinebanking.glas11.st/anmelden.cgi 66.207.71.141/signin.ebay.com/Members_Log-in.htm www.volksbank.de.vr-web.networld.onlinebanking.orange13.st/anmelden.cgi  on the same domain. A user that has any interaction at a site classiﬁed as phishing is regarded as a potential phishing victim. We point out that since we only look at URL based features we cannot determine the speciﬁc information entered by a potential victim. Extending our classiﬁer towards content based analysis, such as that presented by Wu et al. [24], would improve the detection of phishing victims signiﬁcantly.
Using our classiﬁer, we found that on average there are 397 potential phishing victims in a day. Figure 4 indicates the number of users that fell for phishing on each day during the observation period. Day 4 (August 23rd) has the maximum number of potential phishing victims. Based on the number of users who view phishing pages in a day, we further can infer Potential Success Rate of a phisher as follows:  Our analysis indicates that on average, this success rate is 8.24%, implying that on average, 8.24% of the viewers to a phishing page are potential phishing victims.

Distribution of Phishing by Organization.
We further analyzed our results to determine which organizations were popular phishing targets. We used the Target Organization List to determine which organization was the target. Table 6 presents the number of unique phishing URLs by organization. The table also indicates the Potential Success Rate of a phisher for each organization. The results are averaged over the 12 days of data and the top 15 organizations are displayed. The Unknown category indicates that the organization could not be determined from the URL. Most URLs that fall under this category are the Type IV URLs where the target organization is not in the list or the organization has been misspelled. Ebay and Paypal are the top target organizations and phishers attract several potential victims to the corresponding phishing sites.

Geographical Distribution of Phishing.
We used the phishing URLs identiﬁed to determine the geographical distribution of phishing per day. To determine country that hosts a particular phishing URL, we used Google’s IP to Geo-Location infrastructure. This distribution is depicted in Table 7.2 The results indicate that a large percentage of phishing attacks are in the United States.

2The URLs were distributed across 59 countries. We have displayed the results for the top 9 countries.

Discussion.
We point out that since we set a very high threshold probability for our classiﬁer as discussed in Section 3.2, the analysis and results presented is conservative. In other words, as per our true positive rate, 88% of the phishing attacks present in our data sets will be caught by our ﬁlter and 12% (False Negative Rate) will be missed. Since our false positive rate is negligible (0.7%), we can infer that the numbers obtained in our analysis are a lower bound on the phishing attacks present in our data sets. Our analysis conﬁrms that phishing attacks are a very serious threat today.

While there exists a plethora of diﬀerent techniques in phishing detection, we ﬁnd that existing research lacks a thorough measurement study like the one we present in this paper. In this section we brieﬂy discuss some of the detection methods presented previously.
One of the popular methods of detection is using add-in toolbars for the browser. Chou et al. introduced one such tool SpoofGuard [2], that determines if a web page is legitimate based on a series of domain and URL based tests. Gabber et al. present a tool [10], that tries to protect a clients identity and password information. They deﬁne client persona in terms of username, password and email address and introduce a function which provides a client with diﬀerent persona for diﬀerent servers it visits. A similar concept was later presented by Ross et al. in [20] in a tool PwdHash.
Other anti-phishing tools include Google Safe Browsing [21], NetCraft tool bar [16], SpoofStick [4] and SiteAdvisor [14]. These are summarized in Table 8. Most of these tools bars rely only on black list information and might not correctly identify new phishing attacks. In comparison, our classiﬁer uses several generic features and hence enhances the detection of phishing URLs.
Recently, Zhang et al. [25] conducted a thorough analysis on several anti-phishing tool bars to evaluate their eﬀectiveness. Their evaluation suggests that SpoofGuard was very eﬀective in detection of phishing sites, however it did have a very high false positive rate. This is probably due to the fact that SpoofGuard does not rely on any black list/white list information. Their results indicate that the freshness of the phishing URL aﬀects the performance of several antiphishing tools that rely solely on black list information.
Another approach towards phishing detection, is visual appearance of the web site. Dhamija et al. present a technique Dynamic Security Skins [6], which is an extended implementation of their work on Human Interactive Proofs [7].
This technique, uses a shared secret image that allows a remote server to prove its identity to a user, in a way that supports easy veriﬁcation by humans and is hard to spoof by attackers. This protocol, however does not provide security for situations where the user login is from a public terminal.
In [12], Herzberg et al. propose TrustBar, a third party certiﬁcation solution against phishing. The authors propose creating a Trusted Credentials Area (TCA). The TCA controls a signiﬁcant area, located at the top of every browser  window, and large enough to contain highly visible logos and other graphical icons for credentials identifying a legitimate page. While their solution does not rely on complex security factors, it does not prevent against spooﬁng attacks. Specifically, since the logos of websites do not change, they can be used by an attacker to create a look alike TCA in an untrusted web page.
Several authentication mechanisms have also been deployed against the phishing problem. These mechanisms broadly fall into user authentication, server authentication and email authentication. AOL Passcode is one such user authentication system designed to protect against password phishing.
It uses a device that generates a unique six digit numeric code every 60 seconds. Microsoft, on the other hand implemented SenderID [15], an email authentication protocol, to address the problem of domain spooﬁng.
Many researchers have also explored the question as to why users are susceptible to phishing attacks. Jakobsson introduced a new model, called a phishing graph, to visualize the ﬂow of information in a phishing attack [13]. While this model is not in its essence a defensive technique, it is the ﬁrst step towards developing an abstract model for visualizing phishing. A phishing graph enhances the ability to analyze and understand the course of a phishing attack.
More recently, Dhamija et al. [5] analyzed 200 phishing attacks from the Anti-Phishing Work Group database and identiﬁed several reasons, ranging from pure lack of computer system knowledge, to visual deception tricks used by adversaries, due to which users fall for phishing attacks.
They further conducted a usability study with 22 participants and found that 23% of the participants failed to look at security indicators against phishing attacks and as a result 40% of the time they were susceptible to a phishing attack.
Based on their analysis, the authors suggest that it is important re-think the design of security systems, particularly by taking usability issues into consideration.

In this paper we have identiﬁed several new and generic features for identifying phishing URLs. We use our features in a logistic regression classiﬁer that achieves a very high accuracy. One of the major contributions of this work is a large scale measurement study conducted on Google Toolbar URLs. We use our classiﬁer and analyze several million URLs. On average we found around 777 unique phishing  pages per day and on average 8.24% of the number users who view phishing pages are potential phishing victims. Our analysis validates the seriousness of phishing as a threat today. For our full ﬁndings, please see the technical report [8].

This work was carried out during a Summer Internship at Google Inc., Mountain View in 2006. We thank all the members of the Firefox Safebrowsing team at Google for their useful feedback on this work. We thank Peter Norvig and Fabian Monrose for providing invaluable insights on this work. We thank the anonymous reviewers for their comments on this work.